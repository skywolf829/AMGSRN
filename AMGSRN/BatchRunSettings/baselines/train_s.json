[   
    [ "train.py",
        {        
            "save_name": "mantle_NGP_small",
            "model": "NGP",
            "data": "mantle_55.nc",

            "n_dims": 3,
            "n_features": 2,
            "n_grids": 17,
            "hash_log2_size": 11,
            "hash_base_resolution": 8,
            "hash_max_resolution": 256,
            "n_layers": 2,
            "nodes_per_layer": 64,
            "n_outputs": 1,

            "lr": 0.01,
            "iterations": 30000,
            "points_per_iteration": 100000,
            "interpolate": true,
            "log_every": 100,
            "save_with_compression": false
    }], 
    [ "train.py",
        {        
            "save_name": "mantle_fVSRN_small",
            "model": "fVSRN",
            "data": "mantle_55.nc",
            "n_features": 2,
            "feature_grid_shape": "32,32,32",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_features_every": 0,
            "lr": 0.01,
            "iterations": 30000,
            "log_every": 100,
            "save_with_compression": false
    }],     
    [ "train.py",
        {        
            "save_name": "mantle_AMGSRN_small",
            "model": "AMGSRN",
            "data": "mantle_55.nc",
            "n_features": 1,
            "n_grids": 16,
            "feature_grid_shape": "14,14,21",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_every": 100,
            "lr": 0.01,
            "iterations": 30000,
            "save_with_compression": true
    }],
    [ "train.py",
        {        
            "save_name": "mixing_NGP_small",
            "model": "NGP",
            "data": "mixing780.h5",

            "n_dims": 3,
            "n_features": 2,
            "n_grids": 17,
            "hash_log2_size": 11,
            "hash_base_resolution": 8,
            "hash_max_resolution": 256,
            "n_layers": 2,
            "nodes_per_layer": 64,
            "n_outputs": 1,

            "lr": 0.01,
            "iterations": 30000,
            "points_per_iteration": 100000,
            "interpolate": true,
            "log_every": 100,
            "save_with_compression": false
    }], 
    [ "train.py",
        {        
            "save_name": "mixing_fVSRN_small",
            "model": "fVSRN",
            "data": "mixing780.h5",
            "n_features": 2,
            "feature_grid_shape": "32,32,32",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_features_every": 0,
            "lr": 0.01,
            "iterations": 30000,
            "log_every": 100,
            "save_with_compression": false
    }],     
    [ "train.py",
        {        
            "save_name": "mixing_AMGSRN_small",
            "model": "AMGSRN",
            "data": "mixing780.h5",
            "n_features": 1,
            "n_grids": 16,
            "feature_grid_shape": "16,16,16",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_every": 100,
            "lr": 0.01,
            "iterations": 30000,
            "save_with_compression": true
    }],
    [ "train.py",
        {        
            "save_name": "supernova_NGP_small",
            "model": "NGP",
            "data": "supernova1327.h5",

            "n_dims": 3,
            "n_features": 2,
            "n_grids": 17,
            "hash_log2_size": 11,
            "hash_base_resolution": 8,
            "hash_max_resolution": 256,
            "n_layers": 2,
            "nodes_per_layer": 64,
            "n_outputs": 1,

            "lr": 0.01,
            "iterations": 30000,
            "points_per_iteration": 100000,
            "interpolate": true,
            "log_every": 100,
            "save_with_compression": false
    }], 
    [ "train.py",
        {        
            "save_name": "supernova_fVSRN_small",
            "model": "fVSRN",
            "data": "supernova1327.h5",
            "n_features": 2,
            "feature_grid_shape": "32,32,32",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_features_every": 0,
            "lr": 0.01,
            "iterations": 30000,
            "log_every": 100,
            "save_with_compression": false
    }],     
    [ "train.py",
        {        
            "save_name": "supernova_AMGSRN_small",
            "model": "AMGSRN",
            "data": "supernova1327.h5",
            "n_features": 1,
            "n_grids": 16,
            "feature_grid_shape": "16,16,16",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_every": 100,
            "lr": 0.01,
            "iterations": 30000,
            "save_with_compression": true
    }],
    [ "train.py",
        {        
            "save_name": "asteroid_NGP_small",
            "model": "NGP",
            "data": "asteroid_17602-076.nc",

            "n_dims": 3,
            "n_features": 2,
            "n_grids": 17,
            "hash_log2_size": 11,
            "hash_base_resolution": 8,
            "hash_max_resolution": 256,
            "n_layers": 2,
            "nodes_per_layer": 64,
            "n_outputs": 1,

            "lr": 0.01,
            "iterations": 30000,
            "points_per_iteration": 100000,
            "interpolate": true,
            "log_every": 100,
            "save_with_compression": false
    }], 
    [ "train.py",
        {        
            "save_name": "asteroid_fVSRN_small",
            "model": "fVSRN",
            "data": "asteroid_17602-076.nc",
            "n_features": 2,
            "feature_grid_shape": "32,32,32",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_features_every": 0,
            "lr": 0.01,
            "iterations": 30000,
            "log_every": 100,
            "save_with_compression": false
    }],     
    [ "train.py",
        {        
            "save_name": "asteroid_AMGSRN_small",
            "model": "AMGSRN",
            "data": "asteroid_17602-076.nc",
            "n_features": 1,
            "n_grids": 32,
            "feature_grid_shape": "2048,1,1",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_every": 100,
            "lr": 0.01,
            "iterations": 30000,
            "save_with_compression": true
    }],
    
    [ "train.py",
        {        
            "save_name": "chameleon_NGP_small",
            "model": "NGP",
            "data": "chameleon.nc",

            "n_dims": 3,
            "n_features": 2,
            "n_grids": 17,
            "hash_log2_size": 11,
            "hash_base_resolution": 8,
            "hash_max_resolution": 256,
            "n_layers": 2,
            "nodes_per_layer": 64,
            "n_outputs": 1,

            "lr": 0.01,
            "iterations": 30000,
            "points_per_iteration": 100000,
            "interpolate": true,
            "log_every": 100,
            "save_with_compression": false
    }], 
    [ "train.py",
        {        
            "save_name": "chameleon_fVSRN_small",
            "model": "fVSRN",
            "data": "chameleon.nc",
            "n_features": 2,
            "feature_grid_shape": "32,32,32",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_features_every": 0,
            "lr": 0.01,
            "iterations": 30000,
            "log_every": 100,
            "save_with_compression": false
    }],     
    [ "train.py",
        {        
            "save_name": "chameleon_AMGSRN_small",
            "model": "AMGSRN",
            "data": "chameleon.nc",
            "n_features": 1,
            "n_grids": 16,
            "feature_grid_shape": "16,16,16",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_every": 100,
            "lr": 0.01,
            "iterations": 30000,
            "save_with_compression": true
    }],
    [ "train.py",
        {        
            "save_name": "isotropic_NGP_small",
            "model": "NGP",
            "data": "isotropic0.nc",

            "n_dims": 3,
            "n_features": 2,
            "n_grids": 17,
            "hash_log2_size": 11,
            "hash_base_resolution": 8,
            "hash_max_resolution": 256,
            "n_layers": 2,
            "nodes_per_layer": 64,
            "n_outputs": 1,

            "lr": 0.01,
            "iterations": 30000,
            "points_per_iteration": 100000,
            "interpolate": true,
            "log_every": 100,
            "save_with_compression": false
    }], 
    [ "train.py",
        {        
            "save_name": "isotropic_fVSRN_small",
            "model": "fVSRN",
            "data": "isotropic0.nc",
            "n_features": 2,
            "feature_grid_shape": "32,32,32",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_features_every": 0,
            "lr": 0.01,
            "iterations": 30000,
            "log_every": 100,
            "save_with_compression": false
    }],     
    [ "train.py",
        {        
            "save_name": "isotropic_AMGSRN_small",
            "model": "AMGSRN",
            "data": "isotropic0.nc",
            "n_features": 1,
            "n_grids": 16,
            "feature_grid_shape": "16,16,16",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_every": 100,
            "lr": 0.01,
            "iterations": 30000,
            "save_with_compression": true
    }]
]
